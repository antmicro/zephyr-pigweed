name: Run tests in Renode

on:
  push:
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          DEBIAN_FRONTEND=noninteractive sudo apt install -y --no-install-recommends git cmake ninja-build gperf ccache dfu-util device-tree-compiler wget python3-dev python3-venv python3-pip python3-setuptools python3-tk python3-wheel xz-utils file make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1

      - name: Setup Zephyr
        run: |
          pip install west
          west init -l manifest
          west update
          pip install -r third_party/zephyr/scripts/requirements.txt

      - name: Setup Zephyr SDK
        run: |
          cd ~
          wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.4/zephyr-sdk-0.16.4_linux-x86_64.tar.xz
          tar xvf zephyr-sdk-0.16.4_linux-x86_64.tar.xz
          rm zephyr-sdk-0.16.4_linux-x86_64.tar.xz
          cd zephyr-sdk-0.16.4
          ./setup.sh -t all -c

      - name: Build Samples
        run: |
          mkdir binaries
          west build -p -b qemu_cortex_a53 app
          cp build/zephyr/zephyr.elf binaries/app.elf
          west twister --build-only -p qemu_cortex_a53 -T app
          cp twister-out/qemu_cortex_a53/app.hello.other/zephyr/zephyr.elf binaries/test.elf
      
      - name: Archive binaries
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: binaries/

  Test:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: ./binaries

      - name: Install dependencies
        run: |
          sudo apt update
          DEBIAN_FRONTEND=noninteractive sudo apt install -y --no-install-recommends python3 python3-pip python3-venv python3-yaml git

      - name: Setup Renode
        run: |
          mkdir renode-bin
          wget https://dl.antmicro.com/projects/renode/builds/renode-latest.linux-portable.tar.gz
          tar xvf renode-latest.linux-portable.tar.gz --strip-components=1 -C renode-bin
          pip install -r renode-bin/tests/requirements.txt
      
      - name: Run tests
        run: |
          ./renode-bin/renode-test renode/cortex_a53.robot
